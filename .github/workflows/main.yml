name: Web Build + Deploy to GitHub Pages and Streamlit

on:
  # Runs on push to the main or master branches
  push:
    branches:
      - master
      - main
  # Runs on pull request events targeting the main or master branches
  pull_request:
    branches:
      - master
      - main
  # Allows manual workflow dispatch from the Actions tab
  workflow_dispatch:

# Ensure only one concurrent deployment for GitHub Pages, no cancellation of in-progress runs
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  BUILD_NUMBER: 1
  BUILD_VERSION: 1.0.0
  PYTHON_VERSION: 3.12.2
  FLUTTER_VERSION: 3.24.0

jobs:
  # Build job for both Streamlit and Flet web app
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python for Streamlit
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # Install Python dependencies (for Streamlit app)
      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Set up Flutter for the Flet app
      - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      # Build Flet Web
      - name: Flet Build Web
        run: |
          echo "GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}, USER: ${GITHUB_REPOSITORY%/*}, PROJECT_BASE_URL: ${GITHUB_REPOSITORY#*/}"
          flutter config --no-analytics
          flet build web --base-url ${GITHUB_REPOSITORY#*/} --route-url-strategy hash

      # Upload artifact for GitHub Pages deployment
      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: web-build-artifact  # Name of the artifact
          path: build/web

  # Deploy to Streamlit Cloud
  streamlit_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Streamlit App
        run: |
          streamlit run app.py  # Replace with your actual Streamlit app entry file

  # Deploy job for GitHub Pages
  deploy:
    needs: build  # Wait for the "build" job to finish
    runs-on: ubuntu-latest

    # Grant necessary permissions to deploy to GitHub Pages
    permissions:
      pages: write
      id-token: write

    # Deploy to the GitHub Pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:name: Deploy Streamlit App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the code
      - uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'  # You can choose your desired version here

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Run tests (optional step, you can include testing)
      - name: Run tests
        run: |
          pytest  # Ensure you have tests in your repo

      # Step 5: Run the Streamlit app (if you'd like to test run in CI)
      - name: Run Streamlit App
        run: |
          streamlit run app.py  # Replace with the actual entry point of your Streamlit app

      # Configure GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages ðŸš€
        if: github.event_name == 'push'
        id: deployment
        uses: actions/deploy-pages@v4.0.5
        with:
          artifact_name: web-build-artifact
